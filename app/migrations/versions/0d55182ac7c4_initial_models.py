"""Initial Models

Revision ID: 0d55182ac7c4
Revises: 0c1f8d051e27
Create Date: 2025-05-16 01:02:16.912017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0d55182ac7c4'
down_revision: Union[str, None] = '0c1f8d051e27'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=120), nullable=False),
    sa.Column('email_hash', sa.String(length=120), nullable=False),
    sa.Column('discord_id', sa.String(length=50), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('discord_id'),
    sa.UniqueConstraint('email_hash'),
    sa.UniqueConstraint('username')
    )
    op.create_table('worlds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('world_id', sa.Integer(), nullable=False),
    sa.Column('verification_id', sa.String(length=120), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('verification_id')
    )
    op.create_table('spawns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('locking_period', sa.Integer(), nullable=False),
    sa.Column('claim_time_min', sa.Integer(), nullable=False),
    sa.Column('claim_time_max', sa.Integer(), nullable=False),
    sa.Column('world_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['world_id'], ['worlds.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'world_id', name='_spawn_name_world_uc')
    )
    op.create_table('bids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('spawn_id', sa.Integer(), nullable=False),
    sa.Column('bid_points', sa.Integer(), nullable=False),
    sa.Column('hunt_window_start', sa.DateTime(), nullable=False),
    sa.Column('hunt_window_end', sa.DateTime(), nullable=False),
    sa.Column('claim_time', sa.Integer(), nullable=False),
    sa.Column('scheduled_start', sa.DateTime(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.CheckConstraint('hunt_window_end > hunt_window_start', name='_end_after_start'),
    sa.CheckConstraint('scheduled_start >= hunt_window_start AND scheduled_start <= hunt_window_end', name='_scheduled_start_within_window'),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['spawn_id'], ['spawns.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('character_id', 'spawn_id', 'hunt_window_start', name='_character_spawn_start_uc')
    )
    op.create_table('points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('spawn_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['spawn_id'], ['spawns.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('character_id', 'spawn_id', name='_character_spawn_points_uc')
    )
    op.create_table('hunts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('spawn_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('points_paid', sa.Integer(), nullable=True),
    sa.Column('bid_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bid_id'], ['bids.id'], ),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['spawn_id'], ['spawns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('hunts')
    op.drop_table('points')
    op.drop_table('bids')
    op.drop_table('spawns')
    op.drop_table('characters')
    op.drop_table('worlds')
    op.drop_table('users')
    # ### end Alembic commands ###
